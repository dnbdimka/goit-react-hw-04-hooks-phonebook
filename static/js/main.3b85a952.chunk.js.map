{"version":3,"sources":["Components/contactForm/ContactForm.js","Components/contactList/contactListItem/ContactListItem.js","Components/contactList/ContactList.js","Components/filter/Filter.js","Components/App.js","index.js"],"names":["initialState","name","number","ContactForm","onAddNewContact","useState","contact","setContact","onHandleChange","e","target","value","prev","onSubmit","preventDefault","type","pattern","title","required","onChange","ContactListItem","removeContactById","onClick","id","ContactList","contacts","filterValue","newArr","filter","toLowerCase","includes","length","map","Filter","onFilterInput","JSON","parse","localStorage","getItem","App","setContacts","setFilter","useEffect","setItem","stringify","some","contactState","alert","uuidv4","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b85a952.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst ContactForm = ({ onAddNewContact }) => {\r\n  const [contact, setContact] = useState(initialState);\r\n  const onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setContact((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handelSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    onAddNewContact(contact);\r\n    setContact({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handelSubmitForm}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onHandleChange}\r\n          value={contact.name}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={onHandleChange}\r\n          value={contact.number}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nconst ContactListItem = ({ contact, removeContactById }) => {\r\n  const remove = () => {\r\n    removeContactById(contact.id);\r\n  };\r\n  return (\r\n    <li>\r\n      <p>\r\n        {contact.name}: {contact.number}\r\n      </p>\r\n      <button onClick={remove}>DELETE</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, filterValue, removeContactById }) => {\r\n  const newArr = [...contacts].filter((contact) =>\r\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {contacts.length !== 0 ? (\r\n        <>\r\n          {newArr.length !== 0 ? (\r\n            <ul>\r\n              {newArr.map((contact) => (\r\n                <ContactListItem\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  removeContactById={removeContactById}\r\n                />\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>There is no such contact ;(</p>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>Please enter your first contact ;)</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ onFilterInput, filter }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name:\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onFilterInput}\r\n        value={filter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nconst initialState = {\r\n  contacts: JSON.parse(localStorage.getItem(\"contacts\")) || [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  filter: \"\",\r\n};\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState(initialState.contacts);\r\n\r\n  const [filter, setFilter] = useState(initialState.filter);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  });\r\n\r\n  const removeContactById = (id) => {\r\n    setContacts((prev) => [...prev.filter((contact) => contact.id !== id)]);\r\n  };\r\n\r\n  const onFilterInput = (e) => {\r\n    const { value } = e.target;\r\n    setFilter((prev) => value);\r\n  };\r\n\r\n  const onAddNewContact = (contact) => {\r\n    if (\r\n      contacts.some((contactState) =>\r\n        contactState.name.toLowerCase().includes(contact.name.toLowerCase())\r\n      )\r\n    ) {\r\n      alert(`${contact.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    setContacts((prev) => [\r\n      ...prev,\r\n      { name: contact.name, number: contact.number, id: uuidv4() },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAddNewContact={onAddNewContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        {contacts.length !== 0 && (\r\n          <Filter onFilterInput={onFilterInput} filter={filter} />\r\n        )}\r\n\r\n        <ContactList\r\n          contacts={contacts}\r\n          filterValue={filter}\r\n          removeContactById={removeContactById}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}